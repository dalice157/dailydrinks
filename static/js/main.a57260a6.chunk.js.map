{"version":3,"sources":["InputField.scss","List.scss","Header.scss","App.scss","Header.js","List.js","InputField.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","button","danger","addWrap","disabled","btnWrap","row","wrap","table","header","logo","Header","_ref","react_default","a","createElement","className","styles","List","onEditChange","e","currentId","_e$target","target","value","name","editList","_this","props","data","map","item","id","getLists","onDel","delList","filter","onEdit","edit","onUpdate","updateList","_this2","this","isEditBtn","onClick","type","Fragment","concat","key","valign","onChange","userName","price","rows","notes","Component","InputField","state","nameVal","priceVal","notesVal","errorMsg","isSubmit","onAdd","preventDefault","_this$state","newList","Object","toConsumableArray","length","setState","onAddChange","defineProperty","prevProps","prevState","_this$state2","console","log","_this$state3","disableBtnStyle","onSubmit","htmlFor","placeholder","App","lists","orderItems","src_Header_0","src_InputField_0","src_List_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a57260a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"InputField_button__29dFM\",\"danger\":\"InputField_danger__2SA-9\",\"addWrap\":\"InputField_addWrap__320Y-\",\"disabled\":\"InputField_disabled__1NiXu\",\"btnWrap\":\"InputField_btnWrap__1oWGq\",\"row\":\"InputField_row__2oWHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"List_button__331rE\",\"danger\":\"List_danger__2lNwM\",\"wrap\":\"List_wrap__2Vj1Y\",\"table\":\"List_table__1q0iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1-iU2\",\"logo\":\"Header_logo__QZhrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__vxtcQ\"};","import React from 'react'\nimport styles from './Header.scss';\n\nconst Header= ({logo}) => {\n  return (\n    <div className={styles.header}>\n      <h1 className={styles.logo}>{logo}</h1>\n    </div>\n  )\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport styles from './List.scss';\n\nclass List extends Component {\n\n  onEditChange = (e, currentId)=>{\n    const { value, name } = e.target;\n    const { data } = this.props;\n    const editList = data.map(item => {\n      item[name] = item.id === currentId ? value: item[name];\n      return item;\n    })\n    this.props.getLists(editList);\n  }\n\n  onDel = (currentId)=>{\n    const { data } = this.props;\n    const delList = data.filter((item) => item.id !== currentId);\n    this.props.getLists(delList);\n  }\n\n  onEdit = (currentId)=>{\n    const { data } = this.props;\n    const editList = data.map(item => {\n      item.edit = item.id === currentId ? true : item.edit;\n      return item;\n    });\n    this.props.getLists(editList);\n  }\n  \n  onUpdate = ( currentId )=> {\n    const { data } = this.props;\n    const updateList = data.map(item => {\n      item.edit = item.id === currentId ? false : item.edit;\n      return item;\n    });\n    this.props.getLists(updateList);\n  }\n\n  render() {\n\tconst {data} = this.props;\n\t\n  return (\n    <table className={styles.table}>\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>Price</th>\n        <th>Notes</th>\n        <th>Other</th>\n      </tr>\n      </thead>\n      <tbody>\n        {\n          data.map((item) => {\n            const isEditBtn = item.edit ? \n            <button onClick={()=> this.onUpdate(item.id)} className={styles.button} type=\"button\">Update</button>\n              :\n              <>\n                <button onClick={() => this.onEdit(item.id)} className={styles.button} type=\"button\">Edit</button>\n                <button onClick={() => this.onDel(item.id)} className={`${styles.button} ${styles.button} ${styles.danger}`} type=\"button\">Delete</button>\n              </>;\n            return (\n              <tr key={item.id}>\n              <td valign=\"middle\">\n                {\n                  item.edit?\n                  <input name=\"userName\" onChange={(e) => this.onEditChange(e, item.id)} value={item.userName} type=\"text\" /> :\n                  item.userName\n                }\n              </td>\n              <td valign=\"middle\">\n                {\n                  item.edit?\n                  <input name=\"price\" type=\"number\" onChange={(e) => this.onEditChange(e, item.id)} value={item.price} /> :\n                  `$ ${item.price} 元`\n                }\n              </td>\n              <td valign=\"middle\">\n                {\n                  item.edit?\n                  <textarea name=\"notes\" rows=\"5\" onChange={(e) => this.onEditChange(e, item.id)} value={item.notes} />:\n                  item.notes\n                }\n              </td>\n              <td>\n                {isEditBtn}\n              </td>\n            </tr>\n            )\n          })\n        }\n      </tbody>\n    </table>\n  )\n  }\n}\n\nexport default List;","import React, {Component} from 'react';\nimport styles from './InputField.scss';\n\n// const errorMsgTitle = {\n//   userName: '請填寫 姓名',\n//   price: '請填寫 價錢',\n//   notes: '請填寫 備註'\n// }\n\nclass InputField extends Component {\n  state = {\n    nameVal: '',\n    priceVal: '',\n    notesVal: '',\n    errorMsg: {},\n    isSubmit:true\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {nameVal, priceVal, notesVal} = this.state;\n    if(prevState.nameVal !== nameVal || prevState.priceVal !== priceVal || prevState.notesVal !== notesVal) {\n      if(nameVal !== '' && priceVal !== '' && notesVal !== ''){\n        this.setState({\n          isSubmit: false\n        })\n      }\n    }\n  }\n\n  onAdd = (e)=>{\n    e.preventDefault();\n    const {data} = this.props;\n    const {nameVal, priceVal, notesVal} = this.state;\n    \n    if(nameVal !== '' && priceVal !== '' && notesVal !== '') {\n      const newList = [ ...data, {\n        id: data.length + 1, \n        userName: nameVal, \n        price: priceVal,\n        notes: notesVal,\n        edit: false\n      }];\n      this.props.getLists(newList);\n    }\n    \n    this.setState({\n      nameVal: '',\n      priceVal: '',\n      notesVal: '',\n      isSubmit: true\n    });\n  }\n\n  onAddChange = (e) => {\n    const {value, name} = e.target;\n    const targetName = {\n      userName: 'nameVal',\n      price: 'priceVal',\n      notes: 'notesVal'\n    }\n\n    this.setState({\n      [targetName[name]]: value\n    })\n  } \n\n  render() {\n    console.log('this.stat:', this.state);\n\tconst {nameVal, priceVal, notesVal, isSubmit} = this.state;\n  const disableBtnStyle = isSubmit ? styles.disabled : '';\n    return (\n      <form className={styles.addWrap} onSubmit={this.onAdd}>\n        <div className={styles.row}>\n          <label htmlFor=\"userName\">Name：</label>\n          <input name=\"userName\" onChange={this.onAddChange} value={nameVal} placeholder=\"請填寫 姓名...\" type=\"text\" />\n          {/* {\n            this.state.errorMsg.userName && <div>{this.state.errorMsg.userName}</div>\n          } */}\n        </div>\n        <div className={styles.row}>\n          <label htmlFor=\"price\">Price：</label>\n          <input name=\"price\" type=\"number\" onChange={this.onAddChange} value={priceVal} placeholder=\"請填寫 價錢...\" />\n        </div>\n        <div className={styles.row}>\n          <label htmlFor=\"notes\">Notes：</label>\n          <textarea name=\"notes\" rows=\"5\" onChange={this.onAddChange} value={notesVal} placeholder=\"請填寫 備註...\" />\n        </div>\n        <div className={styles.btnWrap}>\n          <button type=\"submit\" disabled={isSubmit} className={`${styles.button} ${disableBtnStyle}`}>Add</button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default InputField;","import React, { Component } from 'react';\nimport Header from './Header';\nimport List from './List';\nimport InputField from './InputField'\nimport orderItems from './order.json'\nimport styles from './App.scss'\n\n\nclass App extends Component {\n\n  state = {\n    lists: orderItems,\n  }\n\n  getLists = (lists) => {\n    this.setState({\n      lists\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Header logo=\"Daily Drinks\" />\n        <div className={styles.wrap}>\n          <InputField \n            getLists={this.getLists}\n            data={this.state.lists}\n          />\n          <List \n            data={this.state.lists}\n            getLists={this.getLists}\n          />\n        </div>\n        </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}